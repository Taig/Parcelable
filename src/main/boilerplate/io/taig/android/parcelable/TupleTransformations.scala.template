package io.taig.android.parcelable

import java.io.FileDescriptor
import java.net.URL

import android.annotation.TargetApi
import android.os._
import android.text.TextUtils
import android.util.{ Size, SizeF, SparseBooleanArray }

import scala.annotation.implicitNotFound
import scala.collection.breakOut
import scala.collection.generic.CanBuildFrom
import scala.language.{ higherKinds, reflectiveCalls }
import scala.reflect._
import scala.reflect.runtime.currentMirror
import scala.reflect.runtime.universe._
import scala.util.{ Success, Failure, Try }

trait TupleTransformations {
    [2..#implicit def tuple1[[#T1: Transformer#]] = new Transformer[( [#T1#] )] {
        override def read( source: Parcel ) = Tuple1(
                [#implicitly[Transformer[T1]].read( source )#]
        )
            
        override def write( value: ( [#T1#] ), destination: Parcel, flags: Int ) = {
            [#implicitly[Transformer[T1]].write( value._1, destination, flags )#
            ]
        }
    }#
    ]
}