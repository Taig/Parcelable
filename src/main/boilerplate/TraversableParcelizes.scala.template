package io.taig.android.parcelable

import android.os._

import scala.collection.breakOut
import scala.collection.generic.CanBuildFrom

import scala.language.higherKinds

trait TraversableParcelize {
    [..2#implicit def `Parcelize[Traversable1]`[L[[#A1#]] <: Traversable[( [#A1#] )], [#T1: Parcelize#]]( implicit cbf: CanBuildFrom[Nothing, ( [#T1#] ), L[[#T1#]]] ) = new Parcelize[L[[#T1#]]] {
        override def read( source: Parcel ) = {
            ( ##0 until source.readInt() ).map( _ â‡’ implicitly[Parcelize[( [#T1#] )]].read( source ) )( breakOut )
        }

        override def write( value: L[[#T1#]], destination: Parcel, flags: Int ) = {
            destination.writeInt( value.size )
            value.foreach( implicitly[Parcelize[( [#T1#] )]].write( _, destination, flags ) )
        }
    }#
    ]
}